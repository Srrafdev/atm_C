// int OpenDB(sqlite3 **db){
//     int err;

//     err = sqlite3_open("./data/database.db", db);
//     if (err != 0){
//         printf("ERROR OPEN DATABASE");
//         sqlite3_close(*db);
//         return 1;
//     } 
    
//   return 0;
// }
// int createDB(sqlite3 *db){
//     int err;
//     char *query = "CREATE TABLE IF NOT EXICSTS users("
//                   "id INTEGER PRIMARY KEY AUTOINCREMENT,"
//                   "name TEXT NOT NULL,"
//                   "password TEXT NOT NULL);";

//     err = sqlite3_exec(db, query,NULL,NULL,NULL);
//     if (err != 0){
//         printf("ERROR EXEC TO DB");
//         sqlite3_close(db);
//         return err;
//     }

//     return 0;
// }
  // err = sqlite3_exec(db, query,NULL,NULL,NULL);
    // if (err != 0){
    //     printf("ERROR EXEC DATABASE");
    //     sqlite3_close(db);
    //     return 1;
    // }

    // sqlite3_close(db);
    // return 0;

// int OpenDB(sqlite3 **db) {
//     int err = sqlite3_open("./data/database.db", db);
//     if (err != SQLITE_OK) {
//         printf("ERROR OPEN DATABASE: %s\n", sqlite3_errmsg(*db));
//         sqlite3_close(*db);
//         return 1;
//     }
//     return 0;
// }

// int ExecSQL(sqlite3 *db, const char *query) {
//     char *msgErr = NULL;
//     int err = sqlite3_exec(db, query, 0, 0, &msgErr);
//     if (err != SQLITE_OK) {
//         printf("ERROR EXEC QUERY: %s\n", msgErr);
//         sqlite3_free(msgErr);
//         return 1;
//     }
//     return 0;
// }


char s[20] = "some string";
char* query = sqlite3_mprintf("insert into tbl5 values ('%q');", s);


snprintf(queryStr, MAX_QUERY_LENGTH,
         "SELECT %s, COL2, COL3 FROM TABLE WHERE COL4='%s';", var, someValue);


int main() {
    sqlite3 *db;
    sqlite3_stmt *stmt;
    int rc;

    rc = sqlite3_open("test.db", &db);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Cannot open database: %s\n", sqlite3_errmsg(db));
        sqlite3_close(db);
        return 1;
    }

    const char *sql = "SELECT id, name FROM users;";
    rc = sqlite3_prepare_v2(db, sql, -1, &stmt, NULL);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Failed to execute query: %s\n", sqlite3_errmsg(db));
        sqlite3_close(db);
        return 1;
    }

    while ((rc = sqlite3_step(stmt)) == SQLITE_ROW) {
        int id = sqlite3_column_int(stmt, 0);
        const unsigned char *name = sqlite3_column_text(stmt, 1);
        printf("ID: %d, Name: %s\n", id, name);
    }

    sqlite3_finalize(stmt);
    sqlite3_close(db);

   